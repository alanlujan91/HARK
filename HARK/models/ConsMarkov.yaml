description: "MNW's first attempt at the Markov model in YAML."
symbols:
  variables:
    - kNrm               \\ beginning of period capital, normalized by p_{t-1}
    - pLvlPrev           \\ inbound permanent income level, before growth
    - zPrev (int)        \\ inbound discrete Markov state
    - z (int)            \\ discrete Markov state this period
    - Mrkv (int)         \\ duplicate label for Markov state
    - yNrm               \\ normalized labor income
    - pLvl               \\ permanent income level
    - bNrm               \\ normalized bank balances
    - mNrm               \\ normalized market resources
    - cNrm               \\ normalized consumption
    - aNrm               \\ normalized end-of-period assets
  pre_states:
    - kNrm
    - pLvlPrev
    - zPrev
  parameters:
    - Rfree              \\ risk free return factor on assets by state
    - PermGroFac         \\ expected permanent income growth factor by state
    - MrkvArray          \\ matrix of Markov transition probabilities
  functions:
    - cFuncX             \\ consumption function over discrete state and market resources
  distributions:
    - IncShkDstn         \\ joint distribution of permanent and transitory shocks
    - MortDstn           \\ binary mortality distribution
  solution:
    - cFuncX
  offset:
    - PermGroFac
    - Rfree
    - IncShkDstn
    - MrkvArray
initialize: |
  pLvlPrev = 1.                        \\ set initial permanent income to one
  kNrm = 0.                            \\ set initial capital holdings to zero
  zPrev = 0                            \\ set discrete state to zero
dynamics: |
  z    ~ {MrkvArray}(zPrev)            \\ Current discrete state depends on prior state
  Mrkv = z                             \\ Duplicate label of discrete state for compatibility
  (PermShk, TranShk) ~ IncShkDstn[z]   \\ draw permanent and transitory income shocks
  yNrm = TranShk                       \\ normalized income is the transitory shock
  G    = PermGroFac[z] * PermShk       \\ calculate permanent income growth
  pLvl = pLvlPrev * G                  \\ update permanent income level
  bNrm = Rfree[z] * kNrm / G           \\ calculate normalized bank balances
  mNrm = bNrm + yNrm                   \\ calculate normalized market resources
  cNrm = cFuncX@(z, mNrm)              \\ evaluate consumption from market resources
  aNrm = mNrm - cNrm                   \\ calculate normalized end-of-period assets
  dead ~ MortDstn[z]                   \\ draw binary death
twist:
  aNrm: kNrm
  pLvl: pLvlPrev
  z: zPrev
